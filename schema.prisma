generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model PrismaUser {
  id                  String                     @id @map("id")
  login               String                     @unique @map("login")
  email               String                     @unique @map("email")
  name                String                     @map("name")
  hashedPassword      String                     @map("hashed_password")
  projectMembers      PrismaProjectMember[]
  organizationMembers PrismaOrganizationMember[]
  settings            PrismaUserSetting[]
  deletedAt           DateTime?                  @map("deleted_at")
  createdAt           DateTime                   @default(now()) @map("created_at")
  updatedAt           DateTime                   @updatedAt @map("updated_at")

  @@map("users")
}

model PrismaUserSetting {
  id        String     @id @map("id")
  key       String     @unique @map("key")
  value     String     @map("value")
  userId    String     @map("user_id")
  user      PrismaUser @relation(fields: [userId], references: [id])
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")

  @@unique([userId, key])
  @@map("user_settings")
}

model PrismaOrganization {
  id        String                      @id @map("id")
  login     String                      @unique @map("login")
  name      String                      @map("name")
  projects  PrismaProject[]
  members   PrismaOrganizationMember[]
  deletedAt DateTime?                   @map("deleted_at")
  createdAt DateTime                    @default(now()) @map("created_at")
  updatedAt DateTime                    @updatedAt @map("updated_at")

  @@map("organizations")
}

model PrismaOrganizationMember {
  id             String             @id @map("id")
  organization   PrismaOrganization @relation(fields: [organizationId], references: [id])
  organizationId String             @map("organization_id")
  user           PrismaUser         @relation(fields: [userId], references: [id])
  userId         String             @map("user_id")
  role           String             @default("OWNER") @map("role")
  createdAt      DateTime           @default(now()) @map("created_at")

  @@unique([organizationId, userId])
  @@map("organization_members")
}

model PrismaProject {
  id                String                      @id @map("id")
  login             String                      @unique @map("login")
  name              String                      @map("name")
  organization      PrismaOrganization?         @relation(fields: [organizationId], references: [id])
  organizationId    String?                     @map("organization_id")
  members           PrismaProjectMember[]
  settings          PrismaProjectSetting[]
  notifications     PrismaProjectNotification[]
  deletedAt         DateTime?                   @map("deleted_at")
  createdAt         DateTime                    @default(now()) @map("created_at")
  updatedAt         DateTime                    @updatedAt @map("updated_at")

  @@map("projects")
}

model PrismaProjectMember {
  id        String        @id @map("id")
  project   PrismaProject @relation(fields: [projectId], references: [id])
  projectId String        @map("project_id")
  user      PrismaUser    @relation(fields: [userId], references: [id])
  userId    String        @map("user_id")
  role      String        @default("OWNER") @map("role")
  createdAt DateTime      @default(now()) @map("created_at")

  @@unique([projectId, userId])
  @@map("project_members")
}

model PrismaProjectSetting {
  id        String        @id @map("id")
  key       String        @unique @map("key")
  value     String        @map("value")
  projectId String        @map("project_id")
  project   PrismaProject @relation(fields: [projectId], references: [id])
  createdAt DateTime      @default(now()) @map("created_at")
  updatedAt DateTime      @updatedAt @map("updated_at")

  @@unique([projectId, key])
  @@map("project_settings")
}

model PrismaProjectNotification {
  id         String        @id @map("id")
  title      String        @map("title")
  message    String        @map("message")
  type       String        @map("type")
  createdAt  DateTime      @default(now()) @map("created_at")
  deletedAt  DateTime?     @map("deleted_at")
  projectId  String        @map("project_id")
  project    PrismaProject @relation(fields: [projectId], references: [id])

  @@map("project_notifications")
}
